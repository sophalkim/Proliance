@model IEnumerable<ContosoUniversity.Models.TicketSales>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
    <p>
        @Html.ActionLink("Bar", "Index", new { chart = "bar" })
    </p>
    <p>
        @Html.ActionLink("Pie", "Index", new { chart = "pie" })
    </p>

<script src="~/Scripts/Chart.js-master/Chart.js"></script>
<script>
    var randomScalingFactor = function () { return Math.round(Math.random() * 100) };

    var chartOne = false;
    @{
        int len = Model.Count();
        string x = "[";
        foreach (var item in Model)
        {
            x += item.Amount;
            if (item != Model.Last())
            {
                x += ",";
            }
        }
        x += "]";
    }
    var data = @x;
    var barChartData = {
        labels: ["January", "February", "March", "April", "May", "June", "July"],
        datasets: [
			{
			    fillColor: "rgba(220,220,220,0.5)",
			    strokeColor: "rgba(220,220,220,0.8)",
			    highlightFill: "rgba(220,220,220,0.75)",
			    highlightStroke: "rgba(220,220,220,1)",
			    data: data
			},
			{
			    fillColor: "rgba(151,187,205,0.5)",
			    strokeColor: "rgba(151,187,205,0.8)",
			    highlightFill: "rgba(151,187,205,0.75)",
			    highlightStroke: "rgba(151,187,205,1)",
			    data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]
			}
        ]

    }
    window.onload = function () {
        var ctx = document.getElementById("canvas").getContext("2d");
        if (chartOne) {
            window.myBar = new Chart(ctx).Bar(barChartData, {
                responsive: true});
        } else {
            window.myBar = new Chart(ctx).Line(barChartData, {
                responsive: true});
        }
    }

</script>

<canvas id="canvas" width="400" height="400"></canvas>
